buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.0"
        // OPTIONAL Kotlin Serialization plugin
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.7.0'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+' // dependencies loaded from upper-level settings.gradle
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.08.21-1.19.2'
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    runs {
        client {
            workingDirectory project.file('runClient')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
//            property 'forge.enabledGameTestNamespaces', 'examplemod'
            property 'forge.enabledGameTestNamespaces', ''

            mods {
                SuperFactoryManager {
                    source project(':SuperFactoryManager').sourceSets.main
                }
                EnchantmentRequirements {
                    source project(':EnchantmentRequirements').sourceSets.main
                }
                Geoscopes {
                    source project(':Geoscopes').sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('runServer')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
//            property 'forge.enabledGameTestNamespaces', 'examplemod'
            property 'forge.enabledGameTestNamespaces', ''
            mods {
                SuperFactoryManager {
                    source project(':SuperFactoryManager').sourceSets.main
                }
                EnchantmentRequirements {
                    source project(':EnchantmentRequirements').sourceSets.main
                }
                Geoscopes {
                    source project(':Geoscopes').sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('runGameTest')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
//            property 'forge.enabledGameTestNamespaces', 'examplemod'
            property 'forge.enabledGameTestNamespaces', ''

            mods {
                SuperFactoryManager {
                    source project(':SuperFactoryManager').sourceSets.main
                }
                EnchantmentRequirements {
                    source project(':EnchantmentRequirements').sourceSets.main
                }
                Geoscopes {
                    source project(':Geoscopes').sourceSets.main
                }
            }
        }
    }
}

repositories {
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.1.2'
    implementation project(':SuperFactoryManager')
    implementation project(':EnchantmentRequirements')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
